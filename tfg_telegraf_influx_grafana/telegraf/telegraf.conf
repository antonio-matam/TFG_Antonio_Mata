<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> c9e17441fbe05838da6a2e3ba14cdb532dadcb14
# Configuración de Telegraf para leer datos mqtt y enviarlos a influx

[agent]
  interval = "10s"                                   # Intervalo con el que telegraf recopila métricas
  round_interval = true                              # Ajusta los timestamps al múltiplo más cercano de `interval`
  flush_interval = "10s"                             # Frecuencia con la que envía lotes de datos a la salida

# Salida: influxdb
<<<<<<< HEAD
[[outputs.influxdb]]
  urls = ["http://influxdb:8086"]                    # URL de tu instancia influxdb
  database = "telegraf"                              # Nombre de la base de datos donde se guardarán los datos
  skip_database_creation = false                     # Si es false, crea la base de datos si no existe

# Entrada: consumidor mqtt
[[inputs.mqtt_consumer]]                             
  servers = ["tcp://mqtt.eclipseprojects.io:1883"]   # Broker mqtt al que se suscribe
=======
[[outputs.influxdb_v2]]
  ## URL de InfluxDB
  urls = ["http://influxdb:8086"]
  ## Token/org/bucket desde env
  token        = "${INFLUX_TOKEN}"
  organization = "${INFLUX_ORG}"
  bucket       = "${INFLUX_BUCKET}"

# Entrada: consumidor mqtt
[[inputs.mqtt_consumer]]                             
  servers = ["tcp://broker.hivemq.com:1883"]   # Broker mqtt al que se suscribe
>>>>>>> c9e17441fbe05838da6a2e3ba14cdb532dadcb14
  topics = [
    "sensors/ultrasonic",
    "sensors/weight",
    "sensors/laser"
  ]
  data_format = "json"                                # Formato de los mensajes recibidos
  name_override = "sensor_value"                      # Nombre de la métrica en influxdb
  tag_keys = ["topic"]                                # Convierte el topic mqtt en etiqueta
  json_query = ""                                     # vacío para usar todo el payload
  json_time_key = "timestamp"                         # Campo json que contiene el timestamp
  json_time_format = "2006-01-02T15:04:05Z"           # Formato del timestamp
  json_string_fields = []                             # Campos json que deben tratarse como strings





<<<<<<< HEAD
=======
=======
# Configuración de Telegraf para leer datos mqtt y enviarlos a influx

[agent]
  interval = "10s"                                   # Intervalo con el que telegraf recopila métricas
  round_interval = true                              # Ajusta los timestamps al múltiplo más cercano de `interval`
  flush_interval = "10s"                             # Frecuencia con la que envía lotes de datos a la salida

# Salida: influxdb
[[outputs.influxdb]]
  urls = ["http://influxdb:8086"]                    # URL de tu instancia influxdb
  database = "telegraf"                              # Nombre de la base de datos donde se guardarán los datos
  skip_database_creation = false                     # Si es false, crea la base de datos si no existe

# Entrada: consumidor mqtt
[[inputs.mqtt_consumer]]                             
  servers = ["tcp://mqtt.eclipseprojects.io:1883"]   # Broker mqtt al que se suscribe
  topics = [
    "sensors/ultrasonic",
    "sensors/weight",
    "sensors/laser"
  ]
  data_format = "json"                                # Formato de los mensajes recibidos
  name_override = "sensor_value"                      # Nombre de la métrica en influxdb
  tag_keys = ["topic"]                                # Convierte el topic mqtt en etiqueta
  json_query = ""                                     # vacío para usar todo el payload
  json_time_key = "timestamp"                         # Campo json que contiene el timestamp
  json_time_format = "2006-01-02T15:04:05Z"           # Formato del timestamp
  json_string_fields = []                             # Campos json que deben tratarse como strings





>>>>>>> 574321047df6fc4b22468f4dd7fc3a49a772ef77
>>>>>>> c9e17441fbe05838da6a2e3ba14cdb532dadcb14
